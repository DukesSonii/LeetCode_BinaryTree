class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) return res;
        
        Stack<TreeNode> currlevel = new Stack<>();
        Stack<TreeNode> nextlevel = new Stack<>();
        
        currlevel.push(root);
        
        while(!currlevel.isEmpty() || !nextlevel.isEmpty()){
            List<Integer> list = new ArrayList<>();
            
            while(!currlevel.isEmpty()){
                TreeNode node = currlevel.pop();
                list.add(node.val);
                if(node.left != null) nextlevel.push(node.left);
                if(node.right != null) nextlevel.push(node.right);
            }
            if(list.size() > 0) res.add(list);
            
            list = new ArrayList<>();
            while(!nextlevel.isEmpty()){
                TreeNode node = nextlevel.pop();
                list.add(node.val);
                if(node.right != null) currlevel.push(node.right);
                if(node.left != null) currlevel.push(node.left);
            }
            if(list.size() > 0) res.add(list);
        }
        
        return res;
    }
}
